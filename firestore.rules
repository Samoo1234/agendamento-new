rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funções auxiliares para verificação de permissões
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data;
    }
    
    function hasRole(role) {
      return isAuthenticated() && getUserData().role == role;
    }
    
    function hasAnyRole(roles) {
      return isAuthenticated() && getUserData().role in roles;
    }
    
    function isOwner(uid) {
      return isAuthenticated() && request.auth.uid == uid;
    }
    
    function isActive() {
      return isAuthenticated() && getUserData().disabled != true;
    }
    
    // Regra base: negar acesso a tudo por padrão
    match /{document=**} {
      allow read, write: if false;
    }
    
    // USUÁRIOS - Controle granular baseado em roles
    match /usuarios/{userId} {
      // Leitura: usuário pode ver próprio perfil ou admins podem ver todos
      allow read: if isActive() && (
        isOwner(userId) || 
        hasAnyRole(['super_admin', 'admin'])
      );
      
      // Criação: apenas super_admin pode criar usuários
      allow create: if hasRole('super_admin');
      
      // Atualização: usuário pode atualizar próprio perfil (exceto role) ou admins podem atualizar
      allow update: if isActive() && (
        (isOwner(userId) && !('role' in request.resource.data.diff(resource.data).affectedKeys())) ||
        hasAnyRole(['super_admin', 'admin'])
      );
      
      // Exclusão: apenas super_admin
      allow delete: if hasRole('super_admin');
    }
    
    // MÉDICOS
    match /medicos/{doctorId} {
      // Leitura: pública para agendamentos, restrita para gestão
      allow read: if true;
      
      // Escrita: apenas admins e super_admins
      allow write: if isActive() && hasAnyRole(['super_admin', 'admin']);
    }
    
    // CIDADES
    match /cidades/{cityId} {
      // Leitura: pública para agendamentos
      allow read: if true;
      
      // Escrita: apenas admins e super_admins
      allow write: if isActive() && hasAnyRole(['super_admin', 'admin']);
    }
    
    // DATAS DISPONÍVEIS
    match /datas_disponiveis/{dateId} {
      // Leitura: pública para agendamentos
      allow read: if true;
      
      // Escrita: admins, gerentes e recepcionistas
      allow write: if isActive() && hasAnyRole(['super_admin', 'admin', 'manager', 'receptionist']);
    }
    
    // AGENDAMENTOS
    match /agendamentos/{appointmentId} {
      // Leitura: 
      // - Público para leitura básica (formulário de agendamento)
      // - Autenticados podem ver todos (com filtro no frontend por role)
      // - Médicos veem apenas seus agendamentos
      allow read: if true;
      
      // Criação: pública para permitir agendamentos
      allow create: if true;
      
      // Atualização: roles com permissão de gestão
      allow update: if isActive() && hasAnyRole([
        'super_admin', 'admin', 'manager', 'receptionist'
      ]);
      
      // Exclusão: apenas admins e super_admins
      allow delete: if isActive() && hasAnyRole(['super_admin', 'admin']);
    }
    
    // CONFIGURAÇÕES DE HORÁRIOS
    match /configuracoes_horarios/{configId} {
      // Leitura: usuários autenticados
      allow read: if isActive();
      
      // Escrita: admins e gerentes
      allow write: if isActive() && hasAnyRole(['super_admin', 'admin', 'manager']);
    }
    
    // REGISTROS FINANCEIROS
    match /registros_financeiros/{recordId} {
      // Leitura: roles com acesso financeiro
      allow read: if isActive() && hasAnyRole([
        'super_admin', 'admin', 'manager', 'financial'
      ]);
      
      // Escrita: roles com permissão financeira
      allow write: if isActive() && hasAnyRole([
        'super_admin', 'admin', 'financial'
      ]);
    }
    
    // TEMPLATES ENVIADOS (WhatsApp)
    match /templates_enviados/{templateId} {
      // Leitura: usuários autenticados com permissão de visualizar agendamentos
      allow read: if isActive() && hasAnyRole([
        'super_admin', 'admin', 'manager', 'receptionist'
      ]);
      
      // Escrita: sistema automático e admins
      allow write: if isActive() && hasAnyRole(['super_admin', 'admin']);
    }
  }
}
